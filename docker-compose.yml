services:
  frontend:
    build:
      context: ./frontend
      args:
        - BASE_URI=$BASE_URI
        - USER_SVC_PORT=$USER_SVC_PORT
        - QUESTION_SVC_PORT=$QUESTION_SVC_PORT
        - MATCHING_SVC_PORT=$MATCHING_SVC_PORT
    depends_on:
      - question-service
      - user-service
    environment:
      - PORT=$FRONTEND_PORT

  question-service:
    build:
      context: ./question-service
    environment:
      - PORT=$QUESTION_SVC_PORT
      - DB_URI=$QUESTION_SVC_DB_URI
      - FRONTEND_PORT=$FRONTEND_PORT
  
  user-service:
    build:
      context: ./user-service
    environment:
      - PORT=$USER_SVC_PORT
      - DB_URI=$USER_SVC_DB_URI
      - JWT_SECRET=$JWT_SECRET
      - EMAIL_ADDRESS=$EMAIL_ADDRESS
      - EMAIL_PASSWORD=$EMAIL_PASSWORD

  matching-service:
    build:
      context: ./matching-service
    environment:
      - PORT=$MATCHING_SVC_PORT

  api-gateway:
    image: nginx:1.26
    volumes:
      - ./api-gateway/templates:/etc/nginx/templates
    ports:
      - $API_GATEWAY_PORT:$API_GATEWAY_PORT
    environment:
      - PORT=$API_GATEWAY_PORT
      - FRONTEND_PORT=$FRONTEND_PORT
      - USER_SVC_PORT=$USER_SVC_PORT
      - QUESTION_SVC_PORT=$QUESTION_SVC_PORT
      - MATCHING_SVC_PORT=$MATCHING_SVC_PORT
    depends_on:
      - frontend
      - user-service
      - question-service
      - matching-service

  redis:
    image: redis:7.4-alpine
    restart: always
